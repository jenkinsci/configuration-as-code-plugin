name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build on Jenkins ${{ matrix.jenkins-version }}, JDK ${{ matrix.java }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [8, 11]
        jenkins-version: [2.60.3, 2.176.3]
        os: [ubuntu-latest, windows-latest]
        include:
        - jenkins-version: '2.176.3'
          flags: '--define jenkins.version=2.176.3'
        exclude:
        - java: '11'
          jenkins-version: '2.60.3'

    steps:

    - uses: actions/checkout@v1

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Build with Maven
      run: mvn -Penable-jacoco clean package jacoco:report -B -V --no-transfer-progress ${{ matrix.flags }}

    - name: Report coverage
      shell: bash
      run: |
        if [ "${{ secrets.CODACY_PROJECT_TOKEN }}" != "" ] && [ "${{ secrets.CODECOV_TOKEN }}" != "" ]; then
          report=$(find . -type f -wholename '.*/jacoco-aggregate/jacoco.xml')
          if [ ! -f "$report" ]; then
            echo "Coverage report not found"
            exit 1
          fi
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Java -r $report -t ${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -s https://codecov.io/bash) -f $report -t ${{ secrets.CODECOV_TOKEN }}
        else
          echo "No secrets provided for coverage report"
        fi
