# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

Master:
  Name: jenkins-master
  Image: "jenkins/jenkins"
  ImageTag: "2.134-alpine"
  ImagePullPolicy: "IfNotPresent"
  Component: "jenkins-master"
  UseSecurity: true
  AdminUser: admin
  AdminPassword: "formetoknowforyoutofindout"
  Cpu: "200m"
  Memory: "1024Mi"
  # These are the necesarry environment variables to enable the experimental update center
  ContainerEnv:
    - name: JENKINS_UC
      value: https://updates.jenkins.io
    - name: JENKINS_UC_EXPERIMENTAL
      value: https://updates.jenkins.io/experimental
    - name: JENKINS_INCREMENTALS_REPO_MIRROR
      value: https://repo.jenkins-ci.org/incrementals
  # These are the necesarry environment variables to enable the experimental update center    
  InitContainerEnv:
    - name: JENKINS_UC
      value: https://updates.jenkins.io
    - name: JENKINS_UC_EXPERIMENTAL
      value: https://updates.jenkins.io/experimental
    - name: JENKINS_INCREMENTALS_REPO_MIRROR
      value: https://repo.jenkins-ci.org/incrementals

  # List of plugins to be install during Jenkins master start
  # mind the last plugin in the list now ;)
  InstallPlugins:
      - kubernetes:latest
      - kubernetes-credentials:latest
      - workflow-aggregator:latest
      - workflow-job:latest
      - credentials-binding:latest
      - git:latest
      - configuration-as-code:0.10-alpha

# Set min/max heap here if needed with:
# JavaOpts: "-Xms512m -Xmx512m"
# Optionally configure a JMX port
# requires additional JavaOpts, ie
# JavaOpts: >
#   -Dcom.sun.management.jmxremote.port=4000
#   -Dcom.sun.management.jmxremote.authenticsate=false
#   -Dcom.sun.management.jmxremote.ssl=false
# JMXPort: 4000
# List of plugins to be install during Jenkins master start
  InstallPlugins:
      - kubernetes:latest
      - kubernetes-credentials:latest
      - workflow-aggregator:latest
      - workflow-job:latest
      - credentials-binding:latest
      - git:latest
      - configuration-as-code:0.10-alpha

      # - saml:1.0.5
      # - docker-custom-build-environment:latest
# Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  # ScriptApproval:
  #   - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #   - "new groovy.json.JsonSlurperClassic"
# List of groovy init scripts to be executed during Jenkins master start
  InitScripts:
#  - |
#    print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  CustomConfigMap: false

  ServicePort: 8080
# For minikube, set this to NodePort, elsewhere use LoadBalancer
# Use ClusterIP if your setup includes ingress controller
  ServiceType: ClusterIP
  ServiceAnnotations: {}
  ContainerPort: 8080
  SlaveListenerPort: 50000
  LoadBalancerSourceRanges:
  - 0.0.0.0/0
  # HostName: jenkins.cicd.your.cloud
  Ingress:
    Enabled: false
    # Annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: "false"

    # TLS:
    #  - secretName: jenkins.cicd.your.cloud
    #    hosts:
    #      - jenkins.cicd.your.cloud

Agent:
  Enabled: true
  Image: jenkins/jnlp-slave
  ImageTag: 3.19-1-alpine
  Component: jenkins-slave
  Privileged: true
  Cpu: "200m"
  Memory: "512Mi"
  ## volumes:
  ##  - type: Nfs
  ##    serverAddress: fs-xxxxx.efs.eu-central-1.amazonaws.com
  ##    serverPath: "/srv/home/jenkins"
  ##    mountPath: "/home/jenkins"

Persistence:
  Enabled: false
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # ExistingClaim: jenkins

  ## If defined, volume.beta.kubernetes.io/storage-class: <StorageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # StorageClass:
  #AccessMode: ReadWriteOnce
  #Size: 500Gi
  volumes:
  # - name: nothing
  #   emptyDir: {}
  mounts:
  # - mountPath: /var/nothing
  #  name: nothing
  #  readOnly: true

NetworkPolicy:
  # Enable creation of NetworkPolicy resources.
  Enabled: true
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  ApiVersion: extensions/v1beta1
